Original training set
[
  {
    "user_story": "As a user, I want to reset my password so that I can regain access to my account when I forget my credentials.",
    "inputs": "Email address: 'user@example.com', New password: 'SecurePass123!'",
    "preconditions": "User is on the login page and clicks 'Forgot Password' link",
    "steps": "1. Click 'Forgot Password' link\n2. Enter email address\n3. Click 'Send Reset Link' button\n4. Check email for reset link\n5. Click reset link\n6. Enter new password\n7. Confirm new password\n8. Click 'Update Password' button",
    "expected_results": "Password is successfully updated and user can log in with new credentials"
  },
  {
    "user_story": "As a user, I want to register for a new account so that I can access the application.",
    "inputs": "Email: 'newuser@example.com', Username: 'newuser123', Password: 'MySecurePass456!'",
    "preconditions": "User is on the registration page",
    "steps": "1. Enter valid email address\n2. Enter desired username\n3. Enter password\n4. Confirm password\n5. Accept terms and conditions\n6. Click 'Register' button",
    "expected_results": "Account is created successfully and user receives confirmation email"
  },
  {
    "user_story": "As a user, I want to search for products so that I can find items I want to purchase.",
    "inputs": "Product keywords: 'Laptop', filter: 'Price < $1000'",
    "preconditions": "User is on the main page with search functionality",
    "steps": "1. Locate search bar\n2. Enter product name or keywords\n3. Press Enter or click search icon\n4. Review search results\n5. Apply filters if needed",
    "expected_results": "Relevant products are displayed with search results and filtering options"
  }
]

Human golden standard set
[
  {
    "user_story": "As a Data Publishing User, I want to be able to edit a dataset I have published, So that I can correct or enhance existing data.",
    "inputs": "Dataset Name: \"Sales_Report_2023\", New Rows: [Row1: Product=\"Widget\", Sales=500]",
    "preconditions": "The dataset \"Sales_Report_2023\" is already published. User has editing permissions.",
    "steps": "1. Navigate to the \"Published Datasets\" section.\n2. Select the dataset \"Sales_Report_2023\".\n3. Click on the \"Edit Data\" button.\n4. Add a new row with Product=\"Widget\" and Sales=500.\n5. Save changes.",
    "expected_results": "The dataset now includes the new row. The updated dataset reflects the added data."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to edit the model of data I have already imported, So that I can fix bugs or make enhancements in the API built for my data.",
    "inputs": "Data Model Name: \"SalesModel\", Field Name: \"Old_Field\", New Field Name: \"New_Field\"",
    "preconditions": "The data model \"SalesModel\" is already imported. User has editing permissions.",
    "steps": "1. Navigate to the \"Data Models\" section.\n2. Select the data model \"SalesModel\".\n3. Click on the \"Edit Model\" button.\n4. Locate the field \"Old_Field\" and rename it to \"New_Field\".\n5. Save changes.",
    "expected_results": "The field name is updated successfully. The API reflects the new field name."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to delete a dataset I have published, So that I can remove unwanted data from OpenSpending.",
    "inputs": "Dataset Name: \"Unwanted_Sales_Report\"",
    "preconditions": "The dataset \"Unwanted_Sales_Report\" is already published. User has deletion permissions.",
    "steps": "1. Navigate to the \"Published Datasets\" section.\n2. Select the dataset \"Unwanted_Sales_Report\".\n3. Click on the \"Delete Dataset\" button.\n4. Confirm the deletion in the confirmation dialog.",
    "expected_results": "The dataset \"Unwanted_Sales_Report\" is successfully deleted and no longer visible in the list of published datasets."
  },
  {
    "user_story": "As a Platform Administrator, I want to be able to Hide any dataset already added as Public, so that I can maintain Public/Hidden status for other users.",
    "inputs": "Dataset Name: \"Public_Sales_Report\"",
    "preconditions": "The dataset \"Public_Sales_Report\" is currently marked as Public. User has admin privileges.",
    "steps": "1. Navigate to the \"Datasets\" section.\n2. Locate the dataset \"Public_Sales_Report\".\n3. Click on the \"Actions\" dropdown menu for the dataset.\n4. Select the \"Hide Dataset\" option.\n5. Confirm the action in the confirmation dialog.",
    "expected_results": "The dataset \"Public_Sales_Report\" is successfully marked as Hidden and no longer visible to non-admin users."
  },
  {
    "user_story": "As a Platform Administrator, I want to have a view on all datasets published by all users, so that I can perform management actions on any dataset.",
    "inputs": NaN,
    "preconditions": "Multiple datasets have been published by different users. User is logged in as an admin.",
    "steps": "1. Log in as a Platform Administrator.\n2. Navigate to the \"Datasets\" section.\n3. Check the list of datasets displayed.",
    "expected_results": "The admin can see all datasets published by all users, including metadata such as dataset name, owner, and publication date."
  },
  {
    "user_story": "As a Platform Administrator, I want to be able to delete any dataset published, so that I can deal with takedown requests, or clean up test datasets.",
    "inputs": "Dataset Name: \"Test_Sales_Report\"",
    "preconditions": "The dataset \"Test_Sales_Report\" is published by another user. User is logged in as an admin.",
    "steps": "1. Log in as a Platform Administrator.\n2. Navigate to the \"Datasets\" section.\n3. Locate the dataset \"Test_Sales_Report\".\n4. Click on the \"Actions\" dropdown menu for the dataset.\n5. Select the \"Delete Dataset\" option.\n6. Confirm the deletion in the confirmation dialog.",
    "expected_results": "The dataset \"Test_Sales_Report\" is successfully deleted and no longer visible in the list of datasets."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to edit the data source of data I have already imported, so that I can fix bugs or make enhancements in the API built for my data.",
    "inputs": "Original Data Source URL: \"\nhttp://example.com/old-data.csv\n\", New Data Source URL: \"\nhttp://example.com/new-data.csv\n\"",
    "preconditions": "The dataset has been imported using the original data source URL. User has editing permissions.",
    "steps": "1. Navigate to the \"Data Sources\" section.\n2. Select the dataset associated with the original data source URL.\n3. Click on the \"Edit Data Source\" button.\n4. Update the data source URL to \"\nhttp://example.com/new-data.csv\n\".\n5. Save changes.",
    "expected_results": "The data source URL is successfully updated. The dataset now uses the new data source URL for future imports."
  },
  {
    "user_story": "As a Data Publishing User, I want to have the Packager support Constants, so that I can model dimensions that may not exist in the source file.",
    "inputs": "Constant Name: \"Region\", Constant Value: \"Global\"",
    "preconditions": "The dataset is imported but does not include a \"Region\" dimension in the source file. User has editing permissions.",
    "steps": "1. Navigate to the \"Packager\" section of the dataset.\n2. Click on the \"Add Constant\" button.\n3. Enter the constant name as \"Region\" and value as \"Global\".\n4. Save changes.",
    "expected_results": "A new dimension \"Region\" with the constant value \"Global\" is added to the dataset. The dataset now includes this dimension in its structure"
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to import data in Excel, So that I do not have to convert data formats in order to use the data packager.",
    "inputs": "File Name: \"Sales_Data.xlsx\", Sheet Name: \"Sheet1\", Columns: [\"Product\", \"Sales\"]",
    "preconditions": "The Excel file \"Sales_Data.xlsx\" contains valid tabular data. User has permissions to import data.",
    "steps": "1. Navigate to the \"Data Import\" section.\n2. Click on the \"Upload File\" button.\n3. Select the file \"Sales_Data.xlsx\".\n4. Choose the sheet \"Sheet1\" from the dropdown menu.\n5. Map the columns \"Product\" and \"Sales\" to the corresponding fields in the system.\n6. Click on the \"Import\" button.",
    "expected_results": "The Excel file is successfully imported. The data from \"Sheet1\" is visible in the system, and the columns \"Product\" and \"Sales\" are correctly mapped."
  },
  {
    "user_story": "As a Data Publishing User, I want to know what my data needs to be able to be visualised on a map, So that I can visualise it on a map.",
    "inputs": "Dataset Columns: [\"City\", \"Latitude\", \"Longitude\"]",
    "preconditions": "The dataset contains geographic data such as city names and coordinates (latitude/longitude). User is preparing data for visualization.",
    "steps": "1. Navigate to the \"Data Visualization\" section.\n2. Select the dataset containing columns [\"City\", \"Latitude\", \"Longitude\"].\n3. Attempt to create a map visualization.\n4. Observe the system's validation messages or requirements prompt.",
    "expected_results": "The system confirms that the dataset meets the requirements for mapping because it includes geographic data (e.g., latitude and longitude). A message indicates that the data is ready for visualization on a map"
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to import data in JSON, So that I do not have to convert data formats in order to use the data packager.",
    "inputs": "File Name: \"Sales_Data.json\", Structure: [{\"Product\": \"Widget\", \"Sales\": 500}, {\"Product\": \"Gadget\", \"Sales\": 750}]",
    "preconditions": "The JSON file \"Sales_Data.json\" contains valid, well-structured data. User has permissions to import data.",
    "steps": "1. Navigate to the \"Data Import\" section.\n2. Click on the \"Upload File\" button.\n3. Select the file \"Sales_Data.json\".\n4. Map the JSON keys (\"Product\" and \"Sales\") to the corresponding fields in the system.\n5. Click on the \"Import\" button.",
    "expected_results": "The JSON file is successfully imported. The data is visible in the system, and the fields \"Product\" and \"Sales\" are correctly mapped."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to import data from a Google Spreadsheet, So that I do not have to convert data formats in order to use the data packager.",
    "inputs": "Google Spreadsheet URL: \"\nhttps://docs.google.com/spreadsheets/d/abc123\n\", Sheet Name: \"Sales_Data\", Columns: [\"Product\", \"Sales\"]",
    "preconditions": "The Google Spreadsheet is publicly accessible and contains valid tabular data. User has permissions to import data.",
    "steps": "1. Navigate to the \"Data Import\" section.\n2. Select the \"Import from Google Spreadsheet\" option.\n3. Paste the Google Spreadsheet URL: \"\nhttps://docs.google.com/spreadsheets/d/abc123\n\".\n4. Choose the sheet \"Sales_Data\" from the dropdown menu.\n5. Map the columns \"Product\" and \"Sales\" to the corresponding fields in the system.\n6. Click on the \"Import\" button.",
    "expected_results": "The data from the Google Spreadsheet is successfully imported. The dataset is visible in the system, and the columns \"Product\" and \"Sales\" are correctly mapped."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to import data from a Fiscal Data Package descriptor file, so that I do not have to convert data formats in order to use the data packager.",
    "inputs": "Fiscal Data Package File: \"fiscal_data_package.json\", Data File: \"budget.csv\"",
    "preconditions": "The Fiscal Data Package descriptor file (\"fiscal_data_package.json\") is valid and references a CSV file (\"budget.csv\") containing tabular data. User has permissions to import data.",
    "steps": "1. Navigate to the \"Data Import\" section.\n2. Select the \"Import from Fiscal Data Package\" option.\n3. Upload the Fiscal Data Package descriptor file \"fiscal_data_package.json\".\n4. Allow the system to automatically detect and load the referenced data file (\"budget.csv\").\n5. Map the fields from the descriptor file to the corresponding fields in the system.\n6. Click on the \"Import\" button.",
    "expected_results": "The data from the Fiscal Data Package descriptor file and its associated CSV file (\"budget.csv\") is successfully imported. The dataset is visible in the system, and all fields are correctly mapped."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to provide the Platform Administrator with additional GeoJSON sources, so that I can improve the map-based visualizations of my data",
    "inputs": "GeoJSON File: \"regions.geojson\", Structure: {\"type\": \"FeatureCollection\", \"features\": [...] }",
    "preconditions": "The GeoJSON file \"regions.geojson\" is valid and contains geographic features (e.g., polygons or points). User has permissions to upload files",
    "steps": "1. Navigate to the \"GeoJSON Sources\" section in the platform.\n2. Click on the \"Upload GeoJSON Source\" button.\n3. Select the file \"regions.geojson\".\n4. Provide a name or description for the GeoJSON source (e.g., \"Regional Boundaries\").\n5. Submit the upload request.",
    "expected_results": "The GeoJSON file is successfully uploaded. The system confirms the upload and makes the source available for map-based visualizations."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to filter, sort, and aggregate data by multiple dimensions and measures, so that I can get more granular views on the data.",
    "inputs": "Dataset: \"Sales_Data.csv\", Columns: [\"Region\", \"Product\", \"Sales\"], Filter Criteria: Region = \"North\", Sort Order: Sales (Descending)",
    "preconditions": "The dataset \"Sales_Data.csv\" contains sales records grouped by region and product. User has access to the dataset.",
    "steps": "1. Navigate to the \"Data Exploration\" or \"Data Analysis\" section.\n2. Select the dataset \"Sales_Data.csv\".\n3. Apply a filter: Set \"Region\" to \"North\".\n4. Apply sorting: Sort the filtered data by \"Sales\" in descending order.\n5. Execute the query or apply the changes.",
    "expected_results": "The system displays only records where \"Region\" is \"North,\" sorted by \"Sales\" in descending order. The user can see the top-performing products in the \"North\" region."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to download a CSV of the data that is used in any visualization I am viewing, so that I can use the data in other tools.",
    "inputs": "Dataset: \"Sales_Data.csv\", Visualization Type: Bar Chart, Dimensions: [\"Region\"], Measures: [\"Sum(Sales)\"]",
    "preconditions": "The user is viewing a bar chart visualization of sales data grouped by region.",
    "steps": "1. Navigate to the visualization (e.g., a bar chart showing sales by region).\n2. Locate and click the \"Download CSV\" button or option.\n3. Confirm the download action if prompted.",
    "expected_results": "A CSV file is successfully downloaded. The file contains the data used in the visualization, including columns for \"Region\" and \"Sum(Sales).\" The data matches the filtered, sorted, or aggregated view of the visualization."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to change the display of all monetary measures across a set of currencies, So that I can understand localised amounts in non-localised figures.",
    "inputs": "Dataset: \"Sales_Data.csv\", Monetary Measure: \"Sales (USD)\", Conversion Rate: 0.92 (USD to EUR)",
    "preconditions": "The dataset contains sales data in USD. The user has access to currency conversion settings.",
    "steps": "1. Navigate to the visualization displaying sales data. 2. Locate the currency settings or dropdown menu. 3. Change the currency display from \"USD\" to \"EUR.\" 4. Observe the updated visualization and data values.",
    "expected_results": "All monetary measures (e.g., \"Sales\") are converted from USD to EUR using the correct conversion rate (e.g., $100 USD becomes €92 EUR). The updated values are displayed in the visualization and any associated tables."
  },
  {
    "user_story": "As a Data Consuming User, I want to see textual descriptions that accompany embedded visualisations, So that I can more easily understand what I am viewing.",
    "inputs": "Visualization: \"Sales by Region Bar Chart\", Description: \"This chart shows total sales grouped by region for 2023.\"",
    "preconditions": "The visualization is embedded in a dashboard or report. The system supports adding textual descriptions.",
    "steps": "1. Navigate to the dashboard or report containing the visualization.2. Locate the \"Sales by Region Bar Chart.\" 3. Look for a textual description accompanying the visualization (e.g., below or as a tooltip).",
    "expected_results": "The textual description \"This chart shows total sales grouped by region for 2023\" is displayed alongside the visualization. It is easy to read and provides context for the data being viewed."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to share a view state as a URL to social networks, so that I can share data that I have found with others.",
    "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters Applied: Region = \"North\", Year = 2023",
    "preconditions": "The visualization is displayed with specific filters applied. The system supports generating shareable URLs.",
    "steps": "1. Navigate to the dashboard or report containing the visualization. 2. Apply filters: Set \"Region\" to \"North\" and \"Year\" to 2023. 3. Click the \"Share\" button or option.  4. Copy the generated URL. 5. Paste the URL into a browser or share it on a social network.",
    "expected_results": "The URL correctly reflects the applied filters (Region = \"North\", Year = 2023). When opened, the visualization displays the same filtered view state, ensuring consistency across shared links."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to download an image ofa particular view state, So that I can use it offline.",
    "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters Applied: Region = \"North\", Year = 2023",
    "preconditions": "The visualization is displayed with specific filters applied. The system supports downloading images of the view state.",
    "steps": "1. Navigate to the dashboard or report containing the visualization.2. Apply filters: Set \"Region\" to \"North\" and \"Year\" to 2023. 3. Click the \"Download Image\" button or option.  4. Save the downloaded image file.",
    "expected_results": "The downloaded image correctly reflects the applied filters (Region = \"North,\" Year = 2023). The visualization in the image matches the filtered view state displayed on the screen."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to share an image of a particular view state to the social networks that support this, so that I can provide richer context in those communication channels for data I am sharing.",
    "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters Applied: Region = \"North\", Year = 2023",
    "preconditions": "The visualization is displayed with specific filters applied. The system supports sharing images directly to supported social networks (e.g., Twitter, LinkedIn).",
    "steps": "1. Navigate to the dashboard or report containing the visualization.   2. Apply filters: Set \"Region\" to \"North\" and \"Year\" to 2023.   3. Click the \"Share Image\" button or option.   4. Select a supported social network (e.g., Twitter).   5. Add optional text (e.g., \"Sales data for North region in 2023\") and post.",
    "expected_results": "The image of the filtered view state (Region = \"North,\" Year = 2023) is successfully shared on the selected social network. The image accurately reflects the applied filters, and the accompanying text is included in the post."
  },
  {
    "user_story": "As a Developer, I want to be able to customize the Brand Name, Icon, and Primary Color of all frontend JavaScript apps, so that I can customize the branding for my own needs.",
    "inputs": "Brand Name: \"MyApp\", Primary Color: \"#4CAF50\" (Green), Default Values: Brand Name = \"DefaultApp\", Primary Color = \"#FF5733\" (Orange)",
    "preconditions": "The frontend JavaScript app supports customization of the brand name and primary color.",
    "steps": "1. Navigate to the configuration file or settings panel for the frontend app.   2. Update the \"Brand Name\" field to \"MyApp.\"   3. Change the \"Primary Color\" value to \"#4CAF50.\"   4. Save the changes and refresh the app.",
    "expected_results": "The app reflects the updated branding: The brand name is now displayed as \"MyApp,\" and all UI elements using the primary color (e.g., buttons, headers) are styled with the new green color (#4CAF50)."
  },
  {
    "user_story": "As an API User, I want to be able to understand if a user is a Publisher, So that I can offer functionality based on Dataset Publisher privileges.",
    "inputs": "User ID: \"12345\", Role: \"Publisher\"",
    "preconditions": "The API supports querying user roles. The user with ID \"12345\" has the role of \"Publisher.\"",
    "steps": "1. Send a GET request to the API endpoint /api/users/12345/roles.   2. Inspect the response payload for the user's role.",
    "expected_results": "The API response includes the role \"Publisher\" for the user with ID \"12345.\" This allows the API user to identify the user as a Publisher and offer functionality accordingly."
  },
  {
    "user_story": "As a User, I want to be able to set my own username, so that my data is more easily discoverable.",
    "inputs": "Desired Username: \"DataExplorer123\"",
    "preconditions": "The system allows users to set their own username. The username \"DataExplorer123\" is not already taken.",
    "steps": "1. Navigate to the \"Profile Settings\" or \"Account Settings\" section.   2. Enter \"DataExplorer123\" in the \"Username\" field.   3. Save the changes.",
    "expected_results": "The username \"DataExplorer123\" is successfully saved. The system confirms the update, and the username is now associated with the user's profile and data."
  }
]


result for 24 testcase db

{
  "evaluation_summary": {
    "total_test_cases": 24,
    "evaluation_timestamp": "2025-08-10 06:08:21.318438"
  },
  "individual_results": [
    {
      "user_story": "As a Data Publishing User, I want to be able to edit a dataset I have published, So that I can correct or enhance existing data.",
      "preconditions": "The dataset \"Sales_Report_2023\" is already published. User has editing permissions.",
      "steps": "1. Navigate to the \"Published Datasets\" section.\n2. Select the dataset \"Sales_Report_2023\".\n3. Click on the \"Edit Data\" button.\n4. Add a new row with Product=\"Widget\" and Sales=500.\n5. Save changes.",
      "expected_results": "The dataset now includes the new row. The updated dataset reflects the added data.",
      "inputs": "Dataset Name: \"Sales_Report_2023\", New Rows: [Row1: Product=\"Widget\", Sales=500]",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 3,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.666666666666666,
      "combined_score": 82.38095238095238,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Publishing User, I want to be able to edit the model of data I have already imported, So that I can fix bugs or make enhancements in the API built for my data.",
      "preconditions": "The data model \"SalesModel\" is already imported. User has editing permissions.",
      "steps": "1. Navigate to the \"Data Models\" section.\n2. Select the data model \"SalesModel\".\n3. Click on the \"Edit Model\" button.\n4. Locate the field \"Old_Field\" and rename it to \"New_Field\".\n5. Save changes.",
      "expected_results": "The field name is updated successfully. The API reflects the new field name.",
      "inputs": "Data Model Name: \"SalesModel\", Field Name: \"Old_Field\", New Field Name: \"New_Field\"",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.666666666666666,
      "combined_score": 82.38095238095238,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Publishing User, I want to be able to delete a dataset I have published, So that I can remove unwanted data from OpenSpending.",
      "preconditions": "The dataset \"Unwanted_Sales_Report\" is already published. User has deletion permissions.",
      "steps": "1. Navigate to the \"Published Datasets\" section.\n2. Select the dataset \"Unwanted_Sales_Report\".\n3. Click on the \"Delete Dataset\" button.\n4. Confirm the deletion in the confirmation dialog.",
      "expected_results": "The dataset \"Unwanted_Sales_Report\" is successfully deleted and no longer visible in the list of published datasets.",
      "inputs": "Dataset Name: \"Unwanted_Sales_Report\"",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 2,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 78.57142857142857,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.666666666666666,
      "combined_score": 85.95238095238093,
      "verdict": "High Quality"
    },
    {
      "user_story": "As a Platform Administrator, I want to be able to Hide any dataset already added as Public, so that I can maintain Public/Hidden status for other users.",
      "preconditions": "The dataset \"Public_Sales_Report\" is currently marked as Public. User has admin privileges.",
      "steps": "1. Navigate to the \"Datasets\" section.\n2. Locate the dataset \"Public_Sales_Report\".\n3. Click on the \"Actions\" dropdown menu for the dataset.\n4. Select the \"Hide Dataset\" option.\n5. Confirm the action in the confirmation dialog.",
      "expected_results": "The dataset \"Public_Sales_Report\" is successfully marked as Hidden and no longer visible to non-admin users.",
      "inputs": "Dataset Name: \"Public_Sales_Report\"",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 2,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 78.57142857142857,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 4,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.833333333333333,
      "combined_score": 87.61904761904762,
      "verdict": "High Quality"
    },
    {
      "user_story": "As a Platform Administrator, I want to have a view on all datasets published by all users, so that I can perform management actions on any dataset.",
      "preconditions": "Multiple datasets have been published by different users. User is logged in as an admin.",
      "steps": "1. Log in as a Platform Administrator.\n2. Navigate to the \"Datasets\" section.\n3. Check the list of datasets displayed.",
      "expected_results": "The admin can see all datasets published by all users, including metadata such as dataset name, owner, and publication date.",
      "inputs": "nan",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 2,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 78.57142857142857,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.75,
      "combined_score": 86.78571428571428,
      "verdict": "High Quality"
    },
    {
      "user_story": "As a Platform Administrator, I want to be able to delete any dataset published, so that I can deal with takedown requests, or clean up test datasets.",
      "preconditions": "The dataset \"Test_Sales_Report\" is published by another user. User is logged in as an admin.",
      "steps": "1. Log in as a Platform Administrator.\n2. Navigate to the \"Datasets\" section.\n3. Locate the dataset \"Test_Sales_Report\".\n4. Click on the \"Actions\" dropdown menu for the dataset.\n5. Select the \"Delete Dataset\" option.\n6. Confirm the deletion in the confirmation dialog.",
      "expected_results": "The dataset \"Test_Sales_Report\" is successfully deleted and no longer visible in the list of datasets.",
      "inputs": "Dataset Name: \"Test_Sales_Report\"",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 2,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 78.57142857142857,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 3,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.583333333333334,
      "combined_score": 85.11904761904762,
      "verdict": "High Quality"
    },
    {
      "user_story": "As a Data Publishing User, I want to be able to edit the data source of data I have already imported, so that I can fix bugs or make enhancements in the API built for my data.",
      "preconditions": "The dataset has been imported using the original data source URL. User has editing permissions.",
      "steps": "1. Navigate to the \"Data Sources\" section.\n2. Select the dataset associated with the original data source URL.\n3. Click on the \"Edit Data Source\" button.\n4. Update the data source URL to \"\nhttp://example.com/new-data.csv\n\".\n5. Save changes.",
      "expected_results": "The data source URL is successfully updated. The dataset now uses the new data source URL for future imports.",
      "inputs": "Original Data Source URL: \"\nhttp://example.com/old-data.csv\n\", New Data Source URL: \"\nhttp://example.com/new-data.csv\n\"",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.75,
      "combined_score": 83.21428571428572,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Publishing User, I want to have the Packager support Constants, so that I can model dimensions that may not exist in the source file.",
      "preconditions": "The dataset is imported but does not include a \"Region\" dimension in the source file. User has editing permissions.",
      "steps": "1. Navigate to the \"Packager\" section of the dataset.\n2. Click on the \"Add Constant\" button.\n3. Enter the constant name as \"Region\" and value as \"Global\".\n4. Save changes.",
      "expected_results": "A new dimension \"Region\" with the constant value \"Global\" is added to the dataset. The dataset now includes this dimension in its structure",
      "inputs": "Constant Name: \"Region\", Constant Value: \"Global\"",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.666666666666666,
      "combined_score": 82.38095238095238,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Publishing User, I want to be able to import data in Excel, So that I do not have to convert data formats in order to use the data packager.",
      "preconditions": "The Excel file \"Sales_Data.xlsx\" contains valid tabular data. User has permissions to import data.",
      "steps": "1. Navigate to the \"Data Import\" section.\n2. Click on the \"Upload File\" button.\n3. Select the file \"Sales_Data.xlsx\".\n4. Choose the sheet \"Sheet1\" from the dropdown menu.\n5. Map the columns \"Product\" and \"Sales\" to the corresponding fields in the system.\n6. Click on the \"Import\" button.",
      "expected_results": "The Excel file is successfully imported. The data from \"Sheet1\" is visible in the system, and the columns \"Product\" and \"Sales\" are correctly mapped.",
      "inputs": "File Name: \"Sales_Data.xlsx\", Sheet Name: \"Sheet1\", Columns: [\"Product\", \"Sales\"]",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.666666666666666,
      "combined_score": 82.38095238095238,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Publishing User, I want to know what my data needs to be able to be visualised on a map, So that I can visualise it on a map.",
      "preconditions": "The dataset contains geographic data such as city names and coordinates (latitude/longitude). User is preparing data for visualization.",
      "steps": "1. Navigate to the \"Data Visualization\" section.\n2. Select the dataset containing columns [\"City\", \"Latitude\", \"Longitude\"].\n3. Attempt to create a map visualization.\n4. Observe the system's validation messages or requirements prompt.",
      "expected_results": "The system confirms that the dataset meets the requirements for mapping because it includes geographic data (e.g., latitude and longitude). A message indicates that the data is ready for visualization on a map",
      "inputs": "Dataset Columns: [\"City\", \"Latitude\", \"Longitude\"]",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 3,
        "compliance_best_practices": 5,
        "translating_needs": 4,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.583333333333333,
      "combined_score": 81.54761904761904,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Publishing User, I want to be able to import data in JSON, So that I do not have to convert data formats in order to use the data packager.",
      "preconditions": "The JSON file \"Sales_Data.json\" contains valid, well-structured data. User has permissions to import data.",
      "steps": "1. Navigate to the \"Data Import\" section.\n2. Click on the \"Upload File\" button.\n3. Select the file \"Sales_Data.json\".\n4. Map the JSON keys (\"Product\" and \"Sales\") to the corresponding fields in the system.\n5. Click on the \"Import\" button.",
      "expected_results": "The JSON file is successfully imported. The data is visible in the system, and the fields \"Product\" and \"Sales\" are correctly mapped.",
      "inputs": "File Name: \"Sales_Data.json\", Structure: [{\"Product\": \"Widget\", \"Sales\": 500}, {\"Product\": \"Gadget\", \"Sales\": 750}]",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 3,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.583333333333334,
      "combined_score": 81.54761904761907,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Publishing User, I want to be able to import data from a Google Spreadsheet, So that I do not have to convert data formats in order to use the data packager.",
      "preconditions": "The Google Spreadsheet is publicly accessible and contains valid tabular data. User has permissions to import data.",
      "steps": "1. Navigate to the \"Data Import\" section.\n2. Select the \"Import from Google Spreadsheet\" option.\n3. Paste the Google Spreadsheet URL: \"\nhttps://docs.google.com/spreadsheets/d/abc123\n\".\n4. Choose the sheet \"Sales_Data\" from the dropdown menu.\n5. Map the columns \"Product\" and \"Sales\" to the corresponding fields in the system.\n6. Click on the \"Import\" button.",
      "expected_results": "The data from the Google Spreadsheet is successfully imported. The dataset is visible in the system, and the columns \"Product\" and \"Sales\" are correctly mapped.",
      "inputs": "Google Spreadsheet URL: \"\nhttps://docs.google.com/spreadsheets/d/abc123\n\", Sheet Name: \"Sales_Data\", Columns: [\"Product\", \"Sales\"]",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 4
      },
      "rust_overall": 4.666666666666667,
      "combined_score": 82.38095238095238,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Publishing User, I want to be able to import data from a Fiscal Data Package descriptor file, so that I do not have to convert data formats in order to use the data packager.",
      "preconditions": "The Fiscal Data Package descriptor file (\"fiscal_data_package.json\") is valid and references a CSV file (\"budget.csv\") containing tabular data. User has permissions to import data.",
      "steps": "1. Navigate to the \"Data Import\" section.\n2. Select the \"Import from Fiscal Data Package\" option.\n3. Upload the Fiscal Data Package descriptor file \"fiscal_data_package.json\".\n4. Allow the system to automatically detect and load the referenced data file (\"budget.csv\").\n5. Map the fields from the descriptor file to the corresponding fields in the system.\n6. Click on the \"Import\" button.",
      "expected_results": "The data from the Fiscal Data Package descriptor file and its associated CSV file (\"budget.csv\") is successfully imported. The dataset is visible in the system, and all fields are correctly mapped.",
      "inputs": "Fiscal Data Package File: \"fiscal_data_package.json\", Data File: \"budget.csv\"",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 2,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 78.57142857142857,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.75,
      "combined_score": 86.78571428571428,
      "verdict": "High Quality"
    },
    {
      "user_story": "As a Data Publishing User, I want to be able to provide the Platform Administrator with additional GeoJSON sources, so that I can improve the map-based visualizations of my data",
      "preconditions": "The GeoJSON file \"regions.geojson\" is valid and contains geographic features (e.g., polygons or points). User has permissions to upload files",
      "steps": "1. Navigate to the \"GeoJSON Sources\" section in the platform.\n2. Click on the \"Upload GeoJSON Source\" button.\n3. Select the file \"regions.geojson\".\n4. Provide a name or description for the GeoJSON source (e.g., \"Regional Boundaries\").\n5. Submit the upload request.",
      "expected_results": "The GeoJSON file is successfully uploaded. The system confirms the upload and makes the source available for map-based visualizations.",
      "inputs": "GeoJSON File: \"regions.geojson\", Structure: {\"type\": \"FeatureCollection\", \"features\": [...] }",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 4,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 3,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 4
      },
      "rust_overall": 4.416666666666667,
      "combined_score": 79.88095238095238,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Consuming User, I want to be able to filter, sort, and aggregate data by multiple dimensions and measures, so that I can get more granular views on the data.",
      "preconditions": "The dataset \"Sales_Data.csv\" contains sales records grouped by region and product. User has access to the dataset.",
      "steps": "1. Navigate to the \"Data Exploration\" or \"Data Analysis\" section.\n2. Select the dataset \"Sales_Data.csv\".\n3. Apply a filter: Set \"Region\" to \"North\".\n4. Apply sorting: Sort the filtered data by \"Sales\" in descending order.\n5. Execute the query or apply the changes.",
      "expected_results": "The system displays only records where \"Region\" is \"North,\" sorted by \"Sales\" in descending order. The user can see the top-performing products in the \"North\" region.",
      "inputs": "Dataset: \"Sales_Data.csv\", Columns: [\"Region\", \"Product\", \"Sales\"], Filter Criteria: Region = \"North\", Sort Order: Sales (Descending)",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 3,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 3,
        "compliance_best_practices": 5,
        "translating_needs": 4,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.333333333333333,
      "combined_score": 79.04761904761904,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Consuming User, I want to be able to download a CSV of the data that is used in any visualization I am viewing, so that I can use the data in other tools.",
      "preconditions": "The user is viewing a bar chart visualization of sales data grouped by region.",
      "steps": "1. Navigate to the visualization (e.g., a bar chart showing sales by region).\n2. Locate and click the \"Download CSV\" button or option.\n3. Confirm the download action if prompted.",
      "expected_results": "A CSV file is successfully downloaded. The file contains the data used in the visualization, including columns for \"Region\" and \"Sum(Sales).\" The data matches the filtered, sorted, or aggregated view of the visualization.",
      "inputs": "Dataset: \"Sales_Data.csv\", Visualization Type: Bar Chart, Dimensions: [\"Region\"], Measures: [\"Sum(Sales)\"]",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 2,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 78.57142857142857,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 3,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.583333333333334,
      "combined_score": 85.11904761904762,
      "verdict": "High Quality"
    },
    {
      "user_story": "As a Data Consuming User, I want to be able to change the display of all monetary measures across a set of currencies, So that I can understand localised amounts in non-localised figures.",
      "preconditions": "The dataset contains sales data in USD. The user has access to currency conversion settings.",
      "steps": "1. Navigate to the visualization displaying sales data. 2. Locate the currency settings or dropdown menu. 3. Change the currency display from \"USD\" to \"EUR.\" 4. Observe the updated visualization and data values.",
      "expected_results": "All monetary measures (e.g., \"Sales\") are converted from USD to EUR using the correct conversion rate (e.g., $100 USD becomes €92 EUR). The updated values are displayed in the visualization and any associated tables.",
      "inputs": "Dataset: \"Sales_Data.csv\", Monetary Measure: \"Sales (USD)\", Conversion Rate: 0.92 (USD to EUR)",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.75,
      "combined_score": 83.21428571428572,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Consuming User, I want to see textual descriptions that accompany embedded visualisations, So that I can more easily understand what I am viewing.",
      "preconditions": "The visualization is embedded in a dashboard or report. The system supports adding textual descriptions.",
      "steps": "1. Navigate to the dashboard or report containing the visualization.2. Locate the \"Sales by Region Bar Chart.\" 3. Look for a textual description accompanying the visualization (e.g., below or as a tooltip).",
      "expected_results": "The textual description \"This chart shows total sales grouped by region for 2023\" is displayed alongside the visualization. It is easy to read and provides context for the data being viewed.",
      "inputs": "Visualization: \"Sales by Region Bar Chart\", Description: \"This chart shows total sales grouped by region for 2023.\"",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 71.42857142857143,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 4,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 3,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 4
      },
      "rust_overall": 4.375,
      "combined_score": 79.46428571428572,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Consuming User, I want to be able to share a view state as a URL to social networks, so that I can share data that I have found with others.",
      "preconditions": "The visualization is displayed with specific filters applied. The system supports generating shareable URLs.",
      "steps": "1. Navigate to the dashboard or report containing the visualization. 2. Apply filters: Set \"Region\" to \"North\" and \"Year\" to 2023. 3. Click the \"Share\" button or option.  4. Copy the generated URL. 5. Paste the URL into a browser or share it on a social network.",
      "expected_results": "The URL correctly reflects the applied filters (Region = \"North\", Year = 2023). When opened, the visualization displays the same filtered view state, ensuring consistency across shared links.",
      "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters Applied: Region = \"North\", Year = 2023",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 2,
        "coverage_depth": 2,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 85.71428571428571,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.75,
      "combined_score": 90.35714285714286,
      "verdict": "High Quality"
    },
    {
      "user_story": "As a Data Consuming User, I want to be able to download an image ofa particular view state, So that I can use it offline.",
      "preconditions": "The visualization is displayed with specific filters applied. The system supports downloading images of the view state.",
      "steps": "1. Navigate to the dashboard or report containing the visualization.2. Apply filters: Set \"Region\" to \"North\" and \"Year\" to 2023. 3. Click the \"Download Image\" button or option.  4. Save the downloaded image file.",
      "expected_results": "The downloaded image correctly reflects the applied filters (Region = \"North,\" Year = 2023). The visualization in the image matches the filtered view state displayed on the screen.",
      "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters Applied: Region = \"North\", Year = 2023",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 2,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 78.57142857142857,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 3,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 4
      },
      "rust_overall": 4.5,
      "combined_score": 84.28571428571428,
      "verdict": "Adequate"
    },
    {
      "user_story": "As a Data Consuming User, I want to be able to share an image of a particular view state to the social networks that support this, so that I can provide richer context in those communication channels for data I am sharing.",
      "preconditions": "The visualization is displayed with specific filters applied. The system supports sharing images directly to supported social networks (e.g., Twitter, LinkedIn).",
      "steps": "1. Navigate to the dashboard or report containing the visualization.   2. Apply filters: Set \"Region\" to \"North\" and \"Year\" to 2023.   3. Click the \"Share Image\" button or option.   4. Select a supported social network (e.g., Twitter).   5. Add optional text (e.g., \"Sales data for North region in 2023\") and post.",
      "expected_results": "The image of the filtered view state (Region = \"North,\" Year = 2023) is successfully shared on the selected social network. The image accurately reflects the applied filters, and the accompanying text is included in the post.",
      "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters Applied: Region = \"North\", Year = 2023",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 2,
        "coverage_depth": 2,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 85.71428571428571,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 4
      },
      "rust_overall": 4.666666666666667,
      "combined_score": 89.52380952380952,
      "verdict": "High Quality"
    },
    {
      "user_story": "As a Developer, I want to be able to customize the Brand Name, Icon, and Primary Color of all frontend JavaScript apps, so that I can customize the branding for my own needs.",
      "preconditions": "The frontend JavaScript app supports customization of the brand name and primary color.",
      "steps": "1. Navigate to the configuration file or settings panel for the frontend app.   2. Update the \"Brand Name\" field to \"MyApp.\"   3. Change the \"Primary Color\" value to \"#4CAF50.\"   4. Save the changes and refresh the app.",
      "expected_results": "The app reflects the updated branding: The brand name is now displayed as \"MyApp,\" and all UI elements using the primary color (e.g., buttons, headers) are styled with the new green color (#4CAF50).",
      "inputs": "Brand Name: \"MyApp\", Primary Color: \"#4CAF50\" (Green), Default Values: Brand Name = \"DefaultApp\", Primary Color = \"#FF5733\" (Orange)",
      "sci_scores": {
        "traceability": 1,
        "coverage_breadth": 1,
        "coverage_depth": 1,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 64.28571428571429,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 4,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 4
      },
      "rust_overall": 4.583333333333334,
      "combined_score": 77.97619047619048,
      "verdict": "Adequate"
    },
    {
      "user_story": "As an API User, I want to be able to understand if a user is a Publisher, So that I can offer functionality based on Dataset Publisher privileges.",
      "preconditions": "The API supports querying user roles. The user with ID \"12345\" has the role of \"Publisher.\"",
      "steps": "1. Send a GET request to the API endpoint /api/users/12345/roles.   2. Inspect the response payload for the user's role.",
      "expected_results": "The API response includes the role \"Publisher\" for the user with ID \"12345.\" This allows the API user to identify the user as a Publisher and offer functionality accordingly.",
      "inputs": "User ID: \"12345\", Role: \"Publisher\"",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 2,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 78.57142857142857,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 3,
        "coverage_technical_reqs": 5,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 5
      },
      "rust_overall": 4.833333333333333,
      "combined_score": 87.61904761904762,
      "verdict": "High Quality"
    },
    {
      "user_story": "As a User, I want to be able to set my own username, so that my data is more easily discoverable.",
      "preconditions": "The system allows users to set their own username. The username \"DataExplorer123\" is not already taken.",
      "steps": "1. Navigate to the \"Profile Settings\" or \"Account Settings\" section.   2. Enter \"DataExplorer123\" in the \"Username\" field.   3. Save the changes.",
      "expected_results": "The username \"DataExplorer123\" is successfully saved. The system confirms the update, and the username is now associated with the user's profile and data.",
      "inputs": "Desired Username: \"DataExplorer123\"",
      "sci_scores": {
        "traceability": 2,
        "coverage_breadth": 1,
        "coverage_depth": 2,
        "clarity_precision": 2,
        "completeness": 2,
        "variety_types": 0,
        "consistency": 2
      },
      "sci_percent": 78.57142857142857,
      "rust_scores": {
        "readability_overall": 5,
        "grammar_clarity": 5,
        "accuracy_to_intent": 5,
        "clarity_comprehensibility": 5,
        "specific_information": 5,
        "acceptance_criteria_defined": 5,
        "coverage_of_case_types": 2,
        "coverage_technical_reqs": 4,
        "compliance_best_practices": 5,
        "translating_needs": 5,
        "ambiguity_in_technical_details": 4
      },
      "rust_overall": 4.583333333333333,
      "combined_score": 85.11904761904762,
      "verdict": "High Quality"
    }
  ]
}

Previous project data
[
  {
    "user_story": "As a Data user, I want to have the 12-19-2017 deletions processed.",
    "inputs": "User's request to process the deletions on 12-19-2017",
    "preconditions": "The user is authenticated and has the necessary permissions to access the deletion processing feature.",
    "steps": "1. The system receives the user's request to process the deletions on 12-19-2017.\n2. The system checks if the user has the necessary permissions to access the deletion processing feature.\n3. If the user has the necessary permissions, the system processes the deletions on 12-19-2017.\n4. The system updates the deletion processing status and notifies the user of the result.",
    "expected_results": "The deletions on 12-19-2017 are successfully processed, and the user is notified of the result."
  },
  {
    "user_story": "As a UI designer, I want to redesign the Resources page, so that it matches the new Broker design styles.",
    "inputs": "The current design of the Resources page",
    "preconditions": "The design team has provided the new Broker design styles",
    "steps": "1. Gather the current design of the Resources page and the new Broker design styles\n2. Review the new design styles and identify the key elements that need to be incorporated into the Resources page\n3. Create a wireframe of the redesigned Resources page incorporating the new design styles\n4. Present the wireframe to the design team for feedback and revisions\n5. Refine the design based on feedback and make any necessary changes\n6. Finalize the redesigned Resources page",
    "expected_results": "A redesigned Resources page that matches the new Broker design styles and meets the requirements of the design team."
  },
  {
    "user_story": "As a UI designer, I want to report to the Agencies about user testing, so that they are aware of their contributions to making Broker a better UX.",
    "inputs": "- UI designer's name\n- User testing results",
    "preconditions": "- The UI designer has conducted user testing and has the results.\n- The Agencies are aware of the UI designer's role and the purpose of reporting user testing results.",
    "steps": "1. The UI designer logs in to the system and accesses the reporting feature.\n2. The UI designer selects the user testing results to be reported.\n3. The UI designer enters the name of the Agencies to be informed.\n4. The UI designer submits the report.",
    "expected_results": "- The Agencies receive the report about the user testing results.\n- The UI designer is notified that the report has been successfully submitted."
  },
  {
    "user_story": "As a UI designer, I want to move on to round 2 of DABS or FABS landing page edits, so that I can get approvals from leadership.",
    "inputs": "UI designer's request to move on to round 2 of DABS or FABS landing page edits",
    "preconditions": "UI designer has completed round 1 of DABS or FABS landing page edits and has received feedback from stakeholders",
    "steps": "1. The UI designer submits the request to move on to round 2 of DABS or FABS landing page edits to the project lead.\n2. The project lead reviews the request and verifies that the UI designer has completed round 1 and received feedback from stakeholders.\n3. The project lead provides the UI designer with a revised timeline for round 2 and outlines the necessary changes and improvements.\n4. The UI designer reviews the revised timeline and makes any necessary adjustments.\n5. The UI designer proceeds with implementing the changes and improvements outlined in the revised timeline.",
    "expected_results": "The UI designer successfully moves on to round 2 of DABS or FABS landing page edits, and the project lead provides the necessary approvals and guidance."
  },
  {
    "user_story": "As a UI designer, I want to move on to round 2 of Homepage edits, so that I can get approvals from leadership.",
    "inputs": "The UI designer's request to move on to round 2 of Homepage edits",
    "preconditions": "The UI designer has completed the first round of Homepage edits and has received feedback from leadership.",
    "steps": "1. The UI designer submits the request to move on to round 2 of Homepage edits to the project manager.\n2. The project manager reviews the request and ensures that all necessary approvals are in place.\n3. The project manager schedules a meeting with leadership to discuss the request.\n4. Leadership reviews the request and provides feedback to the UI designer.",
    "expected_results": "The UI designer receives approval to move on to round 2 of Homepage edits from leadership."
  },
  {
    "user_story": "As a UI designer, I want to move on to round 3 of the Help page edits, so that I can get approvals from leadership.",
    "inputs": "UI designer, round 3, Help page edits, leadership approvals",
    "preconditions": "The UI designer has completed the initial design phase and is ready to proceed to the next round of edits.",
    "steps": "1. The UI designer reviews the current design of the Help page and identifies areas that require changes for round 3.\n2. The designer updates the design according to the identified changes and ensures that the design meets the required standards.\n3. The designer checks the updated design for any errors or inconsistencies.\n4. The designer submits the updated design to leadership for review and approval.",
    "expected_results": "Leadership approves the updated design, and the UI designer proceeds to the next round of edits."
  },
  {
    "user_story": "As a Developer, I want to be able to log better, so that I can troubleshoot issues with particular submissions and functions.",
    "inputs": "The system should be able to log better for a specific submission and function",
    "preconditions": "The system is already set up for basic logging.",
    "steps": "1. The developer initiates the logging process for a particular submission.\n2. The system checks if the submission is valid and has the necessary information.\n3. If valid, the system logs the submission and function details.\n4. The system provides an option to view the logged details for troubleshooting purposes.\n5. The developer selects the option to view the logged details.\n6. The system displays the logged details, including the submission and function information.",
    "expected_results": "The system successfully logs the submission and function details, allowing the developer to troubleshoot issues effectively."
  },
  {
    "user_story": "As a Developer, I want to add the updates on a FABS submission to be modified when the publishStatus changes, so that I know when the status of the submission has changed.",
    "inputs": "A FABS submission with a publish status",
    "preconditions": "The submission is in a state where its status can be updated",
    "steps": "1. Create a new FABS submission with a publish status\n2. Modify the publish status of the submission\n3. Verify that the updates on the submission are modified accordingly",
    "expected_results": "The updates on the submission are modified when the publish status changes"
  },
  {
    "user_story": "As a DevOps engineer, I want New Relic to provide useful data across all applications.",
    "inputs": "New Relic's current state and the DevOps engineer's requirements",
    "preconditions": "The DevOps engineer has access to New Relic's interface and the necessary permissions.",
    "steps": "1. The DevOps engineer navigates to New Relic's interface.\n2. The DevOps engineer selects the \"Applications\" tab.\n3. The DevOps engineer chooses the option to view data across all applications.\n4. The DevOps engineer checks if New Relic provides useful data across all applications.",
    "expected_results": "New Relic provides useful data across all applications, and the DevOps engineer can view this data."
  },
  {
    "user_story": "As a UI designer, I want to move on to round 2 of the Help page edits, so that I can get approvals from leadership.",
    "inputs": "As a UI designer, I want to move on to round 2 of the Help page edits, so that I can get approvals from leadership",
    "preconditions": "The UI designer has already completed round 1 of the Help page edits and has a clear understanding of the requirements for round 2.",
    "steps": "1. The UI designer initiates the review process for round 2 of the Help page edits.\n2. The designer submits the updated design for round 2 to the leadership team for review.\n3. The leadership team reviews the submitted design and provides feedback.\n4. The UI designer incorporates the feedback from the leadership team into the design.\n5. The designer submits the revised design for round 2 to the leadership team for final approval.",
    "expected_results": "The leadership team approves the final design for round 2 of the Help page edits, and the UI designer can proceed with the next steps."
  }
]

previous project data benchmark result
{
  "evaluation_summary": {
    "total_evaluations": 1,
    "first_evaluation_timestamp": "2025-08-10 16:53:06.150810"
  },
  "evaluations": [
    {
      "evaluation_summary": {
        "total_test_cases": 10,
        "evaluation_timestamp": "2025-08-10 16:53:06.150810",
        "evaluation_id": "20250810_165306"
      },
      "individual_results": [
        {
          "user_story": "As a Data user, I want to have the 12-19-2017 deletions processed.",
          "preconditions": "The user is authenticated and has the necessary permissions to access the deletion processing feature.",
          "steps": "1. The system receives the user's request to process the deletions on 12-19-2017.\n2. The system checks if the user has the necessary permissions to access the deletion processing feature.\n3. If the user has the necessary permissions, the system processes the deletions on 12-19-2017.\n4. The system updates the deletion processing status and notifies the user of the result.",
          "expected_results": "The deletions on 12-19-2017 are successfully processed, and the user is notified of the result.",
          "inputs": "User's request to process the deletions on 12-19-2017",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 2,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 2,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 3
          },
          "rust_overall": 4.333333333333333,
          "combined_score": 82.61904761904762,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a UI designer, I want to redesign the Resources page, so that it matches the new Broker design styles.",
          "preconditions": "The design team has provided the new Broker design styles",
          "steps": "1. Gather the current design of the Resources page and the new Broker design styles\n2. Review the new design styles and identify the key elements that need to be incorporated into the Resources page\n3. Create a wireframe of the redesigned Resources page incorporating the new design styles\n4. Present the wireframe to the design team for feedback and revisions\n5. Refine the design based on feedback and make any necessary changes\n6. Finalize the redesigned Resources page",
          "expected_results": "A redesigned Resources page that matches the new Broker design styles and meets the requirements of the design team.",
          "inputs": "The current design of the Resources page",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 2,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 2,
            "grammar_clarity": 3,
            "accuracy_to_intent": 1,
            "clarity_comprehensibility": 4,
            "specific_information": 2,
            "acceptance_criteria_defined": 2,
            "coverage_of_case_types": 1,
            "coverage_technical_reqs": 1,
            "compliance_best_practices": 1,
            "translating_needs": 1,
            "ambiguity_in_technical_details": 1
          },
          "rust_overall": 1.7916666666666667,
          "combined_score": 57.20238095238095,
          "verdict": "Needs Improvement"
        },
        {
          "user_story": "As a UI designer, I want to report to the Agencies about user testing, so that they are aware of their contributions to making Broker a better UX.",
          "preconditions": "- The UI designer has conducted user testing and has the results.\n- The Agencies are aware of the UI designer's role and the purpose of reporting user testing results.",
          "steps": "1. The UI designer logs in to the system and accesses the reporting feature.\n2. The UI designer selects the user testing results to be reported.\n3. The UI designer enters the name of the Agencies to be informed.\n4. The UI designer submits the report.",
          "expected_results": "- The Agencies receive the report about the user testing results.\n- The UI designer is notified that the report has been successfully submitted.",
          "inputs": "- UI designer's name\n- User testing results",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 2,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 4,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 4,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 3
          },
          "rust_overall": 4.25,
          "combined_score": 81.78571428571428,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a UI designer, I want to move on to round 2 of DABS or FABS landing page edits, so that I can get approvals from leadership.",
          "preconditions": "UI designer has completed round 1 of DABS or FABS landing page edits and has received feedback from stakeholders",
          "steps": "1. The UI designer submits the request to move on to round 2 of DABS or FABS landing page edits to the project lead.\n2. The project lead reviews the request and verifies that the UI designer has completed round 1 and received feedback from stakeholders.\n3. The project lead provides the UI designer with a revised timeline for round 2 and outlines the necessary changes and improvements.\n4. The UI designer reviews the revised timeline and makes any necessary adjustments.\n5. The UI designer proceeds with implementing the changes and improvements outlined in the revised timeline.",
          "expected_results": "The UI designer successfully moves on to round 2 of DABS or FABS landing page edits, and the project lead provides the necessary approvals and guidance.",
          "inputs": "UI designer's request to move on to round 2 of DABS or FABS landing page edits",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 2,
            "coverage_depth": 2,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 85.71428571428571,
          "rust_scores": {
            "readability_overall": 3,
            "grammar_clarity": 4,
            "accuracy_to_intent": 4,
            "clarity_comprehensibility": 4,
            "specific_information": 4,
            "acceptance_criteria_defined": 2,
            "coverage_of_case_types": 1,
            "coverage_technical_reqs": 1,
            "compliance_best_practices": 1,
            "translating_needs": 1,
            "ambiguity_in_technical_details": 1
          },
          "rust_overall": 2.4583333333333335,
          "combined_score": 67.44047619047619,
          "verdict": "Needs Improvement"
        },
        {
          "user_story": "As a UI designer, I want to move on to round 2 of Homepage edits, so that I can get approvals from leadership.",
          "preconditions": "The UI designer has completed the first round of Homepage edits and has received feedback from leadership.",
          "steps": "1. The UI designer submits the request to move on to round 2 of Homepage edits to the project manager.\n2. The project manager reviews the request and ensures that all necessary approvals are in place.\n3. The project manager schedules a meeting with leadership to discuss the request.\n4. Leadership reviews the request and provides feedback to the UI designer.",
          "expected_results": "The UI designer receives approval to move on to round 2 of Homepage edits from leadership.",
          "inputs": "The UI designer's request to move on to round 2 of Homepage edits",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 0,
            "clarity_precision": 2,
            "completeness": 1,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 57.14285714285714,
          "rust_scores": {
            "readability_overall": 4,
            "grammar_clarity": 4,
            "accuracy_to_intent": 4,
            "clarity_comprehensibility": 4,
            "specific_information": 3,
            "acceptance_criteria_defined": 4,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 1,
            "compliance_best_practices": 2,
            "translating_needs": 2,
            "ambiguity_in_technical_details": 1
          },
          "rust_overall": 2.9166666666666665,
          "combined_score": 57.738095238095234,
          "verdict": "Needs Improvement"
        },
        {
          "user_story": "As a UI designer, I want to move on to round 3 of the Help page edits, so that I can get approvals from leadership.",
          "preconditions": "The UI designer has completed the initial design phase and is ready to proceed to the next round of edits.",
          "steps": "1. The UI designer reviews the current design of the Help page and identifies areas that require changes for round 3.\n2. The designer updates the design according to the identified changes and ensures that the design meets the required standards.\n3. The designer checks the updated design for any errors or inconsistencies.\n4. The designer submits the updated design to leadership for review and approval.",
          "expected_results": "Leadership approves the updated design, and the UI designer proceeds to the next round of edits.",
          "inputs": "UI designer, round 3, Help page edits, leadership approvals",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 2,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 4,
            "grammar_clarity": 4,
            "accuracy_to_intent": 4,
            "clarity_comprehensibility": 4,
            "specific_information": 3,
            "acceptance_criteria_defined": 4,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 2,
            "compliance_best_practices": 2,
            "translating_needs": 2,
            "ambiguity_in_technical_details": 1
          },
          "rust_overall": 2.9999999999999996,
          "combined_score": 69.28571428571428,
          "verdict": "Needs Improvement"
        },
        {
          "user_story": "As a Developer, I want to be able to log better, so that I can troubleshoot issues with particular submissions and functions.",
          "preconditions": "The system is already set up for basic logging.",
          "steps": "1. The developer initiates the logging process for a particular submission.\n2. The system checks if the submission is valid and has the necessary information.\n3. If valid, the system logs the submission and function details.\n4. The system provides an option to view the logged details for troubleshooting purposes.\n5. The developer selects the option to view the logged details.\n6. The system displays the logged details, including the submission and function information.",
          "expected_results": "The system successfully logs the submission and function details, allowing the developer to troubleshoot issues effectively.",
          "inputs": "The system should be able to log better for a specific submission and function",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 1,
            "completeness": 1,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 57.14285714285714,
          "rust_scores": {
            "readability_overall": 4,
            "grammar_clarity": 4,
            "accuracy_to_intent": 4,
            "clarity_comprehensibility": 4,
            "specific_information": 3,
            "acceptance_criteria_defined": 4,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 3,
            "translating_needs": 4,
            "ambiguity_in_technical_details": 3
          },
          "rust_overall": 3.5,
          "combined_score": 63.57142857142857,
          "verdict": "Needs Improvement"
        },
        {
          "user_story": "As a Developer, I want to add the updates on a FABS submission to be modified when the publishStatus changes, so that I know when the status of the submission has changed.",
          "preconditions": "The submission is in a state where its status can be updated",
          "steps": "1. Create a new FABS submission with a publish status\n2. Modify the publish status of the submission\n3. Verify that the updates on the submission are modified accordingly",
          "expected_results": "The updates on the submission are modified when the publish status changes",
          "inputs": "A FABS submission with a publish status",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 1,
            "completeness": 1,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 57.14285714285714,
          "rust_scores": {
            "readability_overall": 4,
            "grammar_clarity": 3,
            "accuracy_to_intent": 4,
            "clarity_comprehensibility": 3,
            "specific_information": 2,
            "acceptance_criteria_defined": 2,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 1,
            "compliance_best_practices": 3,
            "translating_needs": 2,
            "ambiguity_in_technical_details": 1
          },
          "rust_overall": 2.5416666666666665,
          "combined_score": 53.988095238095234,
          "verdict": "Needs Improvement"
        },
        {
          "user_story": "As a DevOps engineer, I want New Relic to provide useful data across all applications.",
          "preconditions": "The DevOps engineer has access to New Relic's interface and the necessary permissions.",
          "steps": "1. The DevOps engineer navigates to New Relic's interface.\n2. The DevOps engineer selects the \"Applications\" tab.\n3. The DevOps engineer chooses the option to view data across all applications.\n4. The DevOps engineer checks if New Relic provides useful data across all applications.",
          "expected_results": "New Relic provides useful data across all applications, and the DevOps engineer can view this data.",
          "inputs": "New Relic's current state and the DevOps engineer's requirements",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 0,
            "clarity_precision": 1,
            "completeness": 1,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 50.0,
          "rust_scores": {
            "readability_overall": 4,
            "grammar_clarity": 4,
            "accuracy_to_intent": 4,
            "clarity_comprehensibility": 4,
            "specific_information": 2,
            "acceptance_criteria_defined": 2,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 2,
            "compliance_best_practices": 2,
            "translating_needs": 2,
            "ambiguity_in_technical_details": 2
          },
          "rust_overall": 2.8333333333333335,
          "combined_score": 53.333333333333336,
          "verdict": "Needs Improvement"
        },
        {
          "user_story": "As a UI designer, I want to move on to round 2 of the Help page edits, so that I can get approvals from leadership.",
          "preconditions": "The UI designer has already completed round 1 of the Help page edits and has a clear understanding of the requirements for round 2.",
          "steps": "1. The UI designer initiates the review process for round 2 of the Help page edits.\n2. The designer submits the updated design for round 2 to the leadership team for review.\n3. The leadership team reviews the submitted design and provides feedback.\n4. The UI designer incorporates the feedback from the leadership team into the design.\n5. The designer submits the revised design for round 2 to the leadership team for final approval.",
          "expected_results": "The leadership team approves the final design for round 2 of the Help page edits, and the UI designer can proceed with the next steps.",
          "inputs": "As a UI designer, I want to move on to round 2 of the Help page edits, so that I can get approvals from leadership",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 2,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 4,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 3,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.583333333333334,
          "combined_score": 85.11904761904762,
          "verdict": "High Quality"
        }
      ]
    }
  ]
}

degraded_mild dataset

[
  {
    "user_story": "As a Data Publishing User, I want to be able to edit a dataset I have published, So that I can correct or enhance existing data.",
    "inputs": "Dataset Name: \"Sales_Report_2023\", New Rows: [Product=\"Widget\", Sales=500]",
    "preconditions": "The dataset \"Sales_Report_2023\" exists. User should have editing permissions.",
    "steps": "1. Go to the \"Published Datasets\" section.\n2. Open \"Sales_Report_2023\".\n3. Click \"Edit Data\".\n4. Add a row with Product=\"Widget\" and Sales=500.\n5. (Optional) Save changes.",
    "expected_results": "The dataset includes the new row and shows the updated data."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to edit the model of data I have already imported, So that I can fix bugs or make enhancements in the API built for my data.",
    "inputs": "Data Model: \"SalesModel\", Change Field: \"Old_Field\" → \"New_Field\"",
    "preconditions": "The data model \"SalesModel\" is imported and editable by the user.",
    "steps": "1. Open the \"Data Models\" area.\n2. Find \"SalesModel\" and click \"Edit Model\".\n3. Rename \"Old_Field\" to \"New_Field\".\n4. Save the model.",
    "expected_results": "The field name is updated and the model reflects the change."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to delete a dataset I have published, So that I can remove unwanted data from OpenSpending.",
    "inputs": "Dataset Name: \"Unwanted_Sales_Report\"",
    "preconditions": "The dataset exists and the user has deletion permissions.",
    "steps": "1. Go to \"Published Datasets\".\n2. Locate \"Unwanted_Sales_Report\".\n3. Click \"Delete Dataset\" and confirm.",
    "expected_results": "The dataset is removed from the published list."
  },
  {
    "user_story": "As a Platform Administrator, I want to be able to Hide any dataset already added as Public, so that I can maintain Public/Hidden status for other users.",
    "inputs": "Dataset Name: \"Public_Sales_Report\"",
    "preconditions": "The dataset is currently Public and the user has admin rights.",
    "steps": "1. Navigate to \"Datasets\".\n2. Find \"Public_Sales_Report\".\n3. Use the \"Actions\" menu and choose \"Hide Dataset\".\n4. Confirm the action.",
    "expected_results": "The dataset is marked Hidden and not shown to non-admin users."
  },
  {
    "user_story": "As a Platform Administrator, I want to have a view on all datasets published by all users, so that I can perform management actions on any dataset.",
    "inputs": null,
    "preconditions": "Multiple datasets exist. The admin user is logged in.",
    "steps": "1. Log in as admin.\n2. Open the \"Datasets\" list.\n3. Review entries shown.",
    "expected_results": "Admin can see datasets from different users with basic metadata."
  },
  {
    "user_story": "As a Platform Administrator, I want to be able to delete any dataset published, so that I can deal with takedown requests, or clean up test datasets.",
    "inputs": "Dataset Name: \"Test_Sales_Report\"",
    "preconditions": "The dataset exists and the user is an admin.",
    "steps": "1. Log in as admin.\n2. Go to \"Datasets\".\n3. Find \"Test_Sales_Report\".\n4. Select \"Delete\" from the Actions menu and confirm.",
    "expected_results": "The dataset is no longer visible in dataset listings."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to edit the data source of data I have already imported, so that I can fix bugs or make enhancements in the API built for my data.",
    "inputs": "Original URL: \"http://example.com/old-data.csv\", New URL: \"http://example.com/new-data.csv\"",
    "preconditions": "The dataset uses the original URL and the user can edit sources.",
    "steps": "1. Open \"Data Sources\".\n2. Select the dataset using the old URL.\n3. Click \"Edit Data Source\".\n4. Replace the URL with the new one and save.",
    "expected_results": "The data source URL is updated; future imports use the new URL."
  },
  {
    "user_story": "As a Data Publishing User, I want to have the Packager support Constants, so that I can model dimensions that may not exist in the source file.",
    "inputs": "Constant: Name=\"Region\", Value=\"Global\"",
    "preconditions": "The dataset lacks the Region dimension and user can edit packaging.",
    "steps": "1. Open the dataset Packager.\n2. Click \"Add Constant\".\n3. Enter Name=\"Region\" and Value=\"Global\".\n4. Save changes.",
    "expected_results": "A Region constant is added and included in dataset structure."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to import data in Excel, So that I do not have to convert data formats in order to use the data packager.",
    "inputs": "File: \"Sales_Data.xlsx\", Sheet: \"Sheet1\", Columns: [\"Product\",\"Sales\"]",
    "preconditions": "The Excel file contains valid table data and user has import rights.",
    "steps": "1. Go to \"Data Import\".\n2. Click \"Upload File\" and pick \"Sales_Data.xlsx\".\n3. Select sheet \"Sheet1\" and map columns.\n4. Click \"Import\".",
    "expected_results": "Excel data is imported and columns are mapped correctly."
  },
  {
    "user_story": "As a Data Publishing User, I want to know what my data needs to be able to be visualised on a map, So that I can visualise it on a map.",
    "inputs": "Columns: [\"City\",\"Latitude\",\"Longitude\"]",
    "preconditions": "Dataset contains geographic fields.",
    "steps": "1. Go to \"Data Visualization\".\n2. Select dataset with City and coordinates.\n3. Try to create a map and read any validation prompts.",
    "expected_results": "System indicates dataset meets mapping requirements."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to import data in JSON, So that I do not have to convert data formats in order to use the data packager.",
    "inputs": "File: \"Sales_Data.json\", Structure: [{\"Product\":\"Widget\",\"Sales\":500}]",
    "preconditions": "JSON file is well formed and user has import permissions.",
    "steps": "1. Open \"Data Import\".\n2. Upload \"Sales_Data.json\".\n3. Map JSON keys to fields.\n4. Click \"Import\".",
    "expected_results": "JSON imports successfully and fields are available."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to import data from a Google Spreadsheet, So that I do not have to convert data formats in order to use the data packager.",
    "inputs": "Google Sheet URL: \"https://docs.google.com/spreadsheets/d/abc123\", Sheet: \"Sales_Data\", Columns: [\"Product\",\"Sales\"]",
    "preconditions": "Sheet is accessible and contains valid data.",
    "steps": "1. Open \"Data Import\".\n2. Choose \"Import from Google Spreadsheet\".\n3. Paste the URL and select sheet \"Sales_Data\".\n4. Map columns and import.",
    "expected_results": "Data from the Google Sheet is imported and mapped."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to import data from a Fiscal Data Package descriptor file, so that I do not have to convert data formats in order to use the data packager.",
    "inputs": "Descriptor: \"fiscal_data_package.json\", Data: \"budget.csv\"",
    "preconditions": "Descriptor is valid and references a CSV file.",
    "steps": "1. Go to \"Data Import\".\n2. Select \"Import from Fiscal Data Package\".\n3. Upload the descriptor and let the system detect the CSV.\n4. Map fields and import.",
    "expected_results": "Descriptor and CSV import successfully and fields appear in the system."
  },
  {
    "user_story": "As a Data Publishing User, I want to be able to provide the Platform Administrator with additional GeoJSON sources, so that I can improve the map-based visualizations of my data",
    "inputs": "GeoJSON: \"regions.geojson\"",
    "preconditions": "GeoJSON file is valid and user can upload sources.",
    "steps": "1. Open \"GeoJSON Sources\".\n2. Click \"Upload GeoJSON Source\".\n3. Select \"regions.geojson\" and provide a name.\n4. Submit upload request.",
    "expected_results": "GeoJSON is uploaded and available for visualizations."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to filter, sort, and aggregate data by multiple dimensions and measures, so that I can get more granular views on the data.",
    "inputs": "Dataset: \"Sales_Data.csv\", Columns: [\"Region\",\"Product\",\"Sales\"], Filter: Region=\"North\", Sort: Sales desc",
    "preconditions": "User can access the dataset.",
    "steps": "1. Go to \"Data Exploration\".\n2. Select \"Sales_Data.csv\".\n3. Apply filter Region=\"North\".\n4. Sort by Sales descending and run query.",
    "expected_results": "Results show only North region records sorted by Sales descending."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to download a CSV of the data that is used in any visualization I am viewing, so that I can use the data in other tools.",
    "inputs": "Dataset: \"Sales_Data.csv\", Visualization: Bar chart grouped by Region",
    "preconditions": "User is viewing a visualization and the download option is available.",
    "steps": "1. Open the visualization.\n2. Click \"Download CSV\".\n3. Confirm and save the file.",
    "expected_results": "A CSV containing the visualization's data is downloaded."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to change the display of all monetary measures across a set of currencies, So that I can understand localised amounts in non-localised figures.",
    "inputs": "Dataset: \"Sales_Data.csv\", Measure: \"Sales (USD)\", Conversion Rate: 0.92",
    "preconditions": "Dataset has USD measures and user can change display currency.",
    "steps": "1. Open the visualization.\n2. Change display currency from USD to EUR in settings.\n3. Observe the updated amounts.",
    "expected_results": "Monetary values are converted using the specified rate and displayed in EUR."
  },
  {
    "user_story": "As a Data Consuming User, I want to see textual descriptions that accompany embedded visualisations, So that I can more easily understand what I am viewing.",
    "inputs": "Visualization: \"Sales by Region Bar Chart\", Description text provided",
    "preconditions": "Visualization is embedded and descriptions are supported.",
    "steps": "1. Open the dashboard/report.\n2. Locate the \"Sales by Region\" visualization.\n3. Check for the accompanying description text.",
    "expected_results": "The provided description appears near the visualization and offers context."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to share a view state as a URL to social networks, so that I can share data that I have found with others.",
    "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters: Region=\"North\", Year=2023",
    "preconditions": "System supports shareable view URLs.",
    "steps": "1. Open visualization and apply filters Region=\"North\" and Year=2023.\n2. Click \"Share\".\n3. Copy the URL and open it in a browser to verify.",
    "expected_results": "The URL opens to the same filtered view."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to download an image of a particular view state, So that I can use it offline.",
    "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters: Region=\"North\", Year=2023",
    "preconditions": "System supports image downloads for visualizations.",
    "steps": "1. Apply the filters.\n2. Click \"Download Image\".\n3. Save the file.",
    "expected_results": "Saved image matches the current filtered view."
  },
  {
    "user_story": "As a Data Consuming User, I want to be able to share an image of a particular view state to the social networks that support this, so that I can provide richer context in those communication channels for data I am sharing.",
    "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters: Region=\"North\", Year=2023",
    "preconditions": "System supports sharing images to social networks and user is signed in to target network where required.",
    "steps": "1. Apply filters.\n2. Click \"Share Image\" and select a supported network.\n3. Add optional text and post.",
    "expected_results": "The image and optional text are posted to the selected social network."
  },
  {
    "user_story": "As a Developer, I want to be able to customize the Brand Name, Icon, and Primary Color of all frontend JavaScript apps, so that I can customize the branding for my own needs.",
    "inputs": "Brand Name: \"MyApp\", Primary Color: \"#4CAF50\"",
    "preconditions": "Frontend supports branding configuration and user can edit settings.",
    "steps": "1. Open the app settings or config file.\n2. Update Brand Name to \"MyApp\" and Primary Color to \"#4CAF50\".\n3. Save and refresh the app.",
    "expected_results": "App displays the new brand name and color in UI elements."
  },
  {
    "user_story": "As an API User, I want to be able to understand if a user is a Publisher, So that I can offer functionality based on Dataset Publisher privileges.",
    "inputs": "User ID: \"12345\"",
    "preconditions": "API supports role queries and user exists.",
    "steps": "1. Request /api/users/12345/roles.\n2. Inspect response for role entries.",
    "expected_results": "Response includes \"Publisher\" role for user 12345."
  },
  {
    "user_story": "As a User, I want to be able to set my own username, so that my data is more easily discoverable.",
    "inputs": "Desired Username: \"DataExplorer123\"",
    "preconditions": "Username is available and system allows changes.",
    "steps": "1. Open Profile Settings.\n2. Enter \"DataExplorer123\" in Username field.\n3. Save changes.",
    "expected_results": "Username is saved and reflected on profile."
  }
]
 result:
{
  "evaluation_summary": {
    "total_evaluations": 1,
    "first_evaluation_timestamp": "2025-08-10 21:29:24.790520"
  },
  "evaluations": [
    {
      "evaluation_summary": {
        "total_test_cases": 24,
        "evaluation_timestamp": "2025-08-10 21:29:24.790520",
        "evaluation_id": "20250810_212924"
      },
      "individual_results": [
        {
          "user_story": "As a Data Publishing User, I want to be able to edit a dataset I have published, So that I can correct or enhance existing data.",
          "preconditions": "The dataset \"Sales_Report_2023\" exists. User should have editing permissions.",
          "steps": "1. Go to the \"Published Datasets\" section.\n2. Open \"Sales_Report_2023\".\n3. Click \"Edit Data\".\n4. Add a row with Product=\"Widget\" and Sales=500.\n5. (Optional) Save changes.",
          "expected_results": "The dataset includes the new row and shows the updated data.",
          "inputs": "Dataset Name: \"Sales_Report_2023\", New Rows: [Product=\"Widget\", Sales=500]",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 71.42857142857143,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 4,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 3,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.583333333333334,
          "combined_score": 81.54761904761907,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Publishing User, I want to be able to edit the model of data I have already imported, So that I can fix bugs or make enhancements in the API built for my data.",
          "preconditions": "The data model \"SalesModel\" is imported and editable by the user.",
          "steps": "1. Open the \"Data Models\" area.\n2. Find \"SalesModel\" and click \"Edit Model\".\n3. Rename \"Old_Field\" to \"New_Field\".\n4. Save the model.",
          "expected_results": "The field name is updated and the model reflects the change.",
          "inputs": "Data Model: \"SalesModel\", Change Field: \"Old_Field\" → \"New_Field\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 71.42857142857143,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 3,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.666666666666666,
          "combined_score": 82.38095238095238,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Publishing User, I want to be able to delete a dataset I have published, So that I can remove unwanted data from OpenSpending.",
          "preconditions": "The dataset exists and the user has deletion permissions.",
          "steps": "1. Go to \"Published Datasets\".\n2. Locate \"Unwanted_Sales_Report\".\n3. Click \"Delete Dataset\" and confirm.",
          "expected_results": "The dataset is removed from the published list.",
          "inputs": "Dataset Name: \"Unwanted_Sales_Report\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 2,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 2,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.5,
          "combined_score": 84.28571428571428,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Platform Administrator, I want to be able to Hide any dataset already added as Public, so that I can maintain Public/Hidden status for other users.",
          "preconditions": "The dataset is currently Public and the user has admin rights.",
          "steps": "1. Navigate to \"Datasets\".\n2. Find \"Public_Sales_Report\".\n3. Use the \"Actions\" menu and choose \"Hide Dataset\".\n4. Confirm the action.",
          "expected_results": "The dataset is marked Hidden and not shown to non-admin users.",
          "inputs": "Dataset Name: \"Public_Sales_Report\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 2,
            "coverage_depth": 2,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 85.71428571428571,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 3,
            "coverage_technical_reqs": 4,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.75,
          "combined_score": 90.35714285714286,
          "verdict": "High Quality"
        },
        {
          "user_story": "As a Platform Administrator, I want to have a view on all datasets published by all users, so that I can perform management actions on any dataset.",
          "preconditions": "Multiple datasets exist. The admin user is logged in.",
          "steps": "1. Log in as admin.\n2. Open the \"Datasets\" list.\n3. Review entries shown.",
          "expected_results": "Admin can see datasets from different users with basic metadata.",
          "inputs": "None",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 2,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 4,
            "acceptance_criteria_defined": 4,
            "coverage_of_case_types": 3,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 4
          },
          "rust_overall": 4.416666666666667,
          "combined_score": 83.45238095238096,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Platform Administrator, I want to be able to delete any dataset published, so that I can deal with takedown requests, or clean up test datasets.",
          "preconditions": "The dataset exists and the user is an admin.",
          "steps": "1. Log in as admin.\n2. Go to \"Datasets\".\n3. Find \"Test_Sales_Report\".\n4. Select \"Delete\" from the Actions menu and confirm.",
          "expected_results": "The dataset is no longer visible in dataset listings.",
          "inputs": "Dataset Name: \"Test_Sales_Report\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 1,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 64.28571428571429,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 3,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.666666666666666,
          "combined_score": 78.8095238095238,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Publishing User, I want to be able to edit the data source of data I have already imported, so that I can fix bugs or make enhancements in the API built for my data.",
          "preconditions": "The dataset uses the original URL and the user can edit sources.",
          "steps": "1. Open \"Data Sources\".\n2. Select the dataset using the old URL.\n3. Click \"Edit Data Source\".\n4. Replace the URL with the new one and save.",
          "expected_results": "The data source URL is updated; future imports use the new URL.",
          "inputs": "Original URL: \"http://example.com/old-data.csv\", New URL: \"http://example.com/new-data.csv\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 71.42857142857143,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 4,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 2,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 2
          },
          "rust_overall": 4.166666666666667,
          "combined_score": 77.38095238095238,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Publishing User, I want to have the Packager support Constants, so that I can model dimensions that may not exist in the source file.",
          "preconditions": "The dataset lacks the Region dimension and user can edit packaging.",
          "steps": "1. Open the dataset Packager.\n2. Click \"Add Constant\".\n3. Enter Name=\"Region\" and Value=\"Global\".\n4. Save changes.",
          "expected_results": "A Region constant is added and included in dataset structure.",
          "inputs": "Constant: Name=\"Region\", Value=\"Global\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 2,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 4,
            "coverage_technical_reqs": 5,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.916666666666667,
          "combined_score": 88.45238095238096,
          "verdict": "High Quality"
        },
        {
          "user_story": "As a Data Publishing User, I want to be able to import data in Excel, So that I do not have to convert data formats in order to use the data packager.",
          "preconditions": "The Excel file contains valid table data and user has import rights.",
          "steps": "1. Go to \"Data Import\".\n2. Click \"Upload File\" and pick \"Sales_Data.xlsx\".\n3. Select sheet \"Sheet1\" and map columns.\n4. Click \"Import\".",
          "expected_results": "Excel data is imported and columns are mapped correctly.",
          "inputs": "File: \"Sales_Data.xlsx\", Sheet: \"Sheet1\", Columns: [\"Product\",\"Sales\"]",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 71.42857142857143,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 4,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 4
          },
          "rust_overall": 4.416666666666667,
          "combined_score": 79.88095238095238,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Publishing User, I want to know what my data needs to be able to be visualised on a map, So that I can visualise it on a map.",
          "preconditions": "Dataset contains geographic fields.",
          "steps": "1. Go to \"Data Visualization\".\n2. Select dataset with City and coordinates.\n3. Try to create a map and read any validation prompts.",
          "expected_results": "System indicates dataset meets mapping requirements.",
          "inputs": "Columns: [\"City\",\"Latitude\",\"Longitude\"]",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 2,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 3,
            "clarity_comprehensibility": 5,
            "specific_information": 4,
            "acceptance_criteria_defined": 4,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 4,
            "translating_needs": 3,
            "ambiguity_in_technical_details": 3
          },
          "rust_overall": 3.8333333333333335,
          "combined_score": 77.61904761904762,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Publishing User, I want to be able to import data in JSON, So that I do not have to convert data formats in order to use the data packager.",
          "preconditions": "JSON file is well formed and user has import permissions.",
          "steps": "1. Open \"Data Import\".\n2. Upload \"Sales_Data.json\".\n3. Map JSON keys to fields.\n4. Click \"Import\".",
          "expected_results": "JSON imports successfully and fields are available.",
          "inputs": "File: \"Sales_Data.json\", Structure: [{\"Product\":\"Widget\",\"Sales\":500}]",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 0,
            "coverage_depth": 0,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 57.14285714285714,
          "rust_scores": {
            "readability_overall": 4,
            "grammar_clarity": 4,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 4,
            "acceptance_criteria_defined": 4,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 2,
            "compliance_best_practices": 4,
            "translating_needs": 4,
            "ambiguity_in_technical_details": 3
          },
          "rust_overall": 3.75,
          "combined_score": 66.07142857142857,
          "verdict": "Needs Improvement"
        },
        {
          "user_story": "As a Data Publishing User, I want to be able to import data from a Google Spreadsheet, So that I do not have to convert data formats in order to use the data packager.",
          "preconditions": "Sheet is accessible and contains valid data.",
          "steps": "1. Open \"Data Import\".\n2. Choose \"Import from Google Spreadsheet\".\n3. Paste the URL and select sheet \"Sales_Data\".\n4. Map columns and import.",
          "expected_results": "Data from the Google Sheet is imported and mapped.",
          "inputs": "Google Sheet URL: \"https://docs.google.com/spreadsheets/d/abc123\", Sheet: \"Sales_Data\", Columns: [\"Product\",\"Sales\"]",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 71.42857142857143,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 4
          },
          "rust_overall": 4.5,
          "combined_score": 80.71428571428572,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Publishing User, I want to be able to import data from a Fiscal Data Package descriptor file, so that I do not have to convert data formats in order to use the data packager.",
          "preconditions": "Descriptor is valid and references a CSV file.",
          "steps": "1. Go to \"Data Import\".\n2. Select \"Import from Fiscal Data Package\".\n3. Upload the descriptor and let the system detect the CSV.\n4. Map fields and import.",
          "expected_results": "Descriptor and CSV import successfully and fields appear in the system.",
          "inputs": "Descriptor: \"fiscal_data_package.json\", Data: \"budget.csv\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 1,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 64.28571428571429,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 4,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 4,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.583333333333334,
          "combined_score": 77.97619047619048,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Publishing User, I want to be able to provide the Platform Administrator with additional GeoJSON sources, so that I can improve the map-based visualizations of my data",
          "preconditions": "GeoJSON file is valid and user can upload sources.",
          "steps": "1. Open \"GeoJSON Sources\".\n2. Click \"Upload GeoJSON Source\".\n3. Select \"regions.geojson\" and provide a name.\n4. Submit upload request.",
          "expected_results": "GeoJSON is uploaded and available for visualizations.",
          "inputs": "GeoJSON: \"regions.geojson\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 0,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 64.28571428571429,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 4,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 4,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 4
          },
          "rust_overall": 4.333333333333334,
          "combined_score": 75.47619047619048,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Consuming User, I want to be able to filter, sort, and aggregate data by multiple dimensions and measures, so that I can get more granular views on the data.",
          "preconditions": "User can access the dataset.",
          "steps": "1. Go to \"Data Exploration\".\n2. Select \"Sales_Data.csv\".\n3. Apply filter Region=\"North\".\n4. Sort by Sales descending and run query.",
          "expected_results": "Results show only North region records sorted by Sales descending.",
          "inputs": "Dataset: \"Sales_Data.csv\", Columns: [\"Region\",\"Product\",\"Sales\"], Filter: Region=\"North\", Sort: Sales desc",
          "sci_scores": {
            "traceability": 1,
            "coverage_breadth": 1,
            "coverage_depth": 0,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 57.14285714285714,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 4,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.5,
          "combined_score": 73.57142857142857,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Consuming User, I want to be able to download a CSV of the data that is used in any visualization I am viewing, so that I can use the data in other tools.",
          "preconditions": "User is viewing a visualization and the download option is available.",
          "steps": "1. Open the visualization.\n2. Click \"Download CSV\".\n3. Confirm and save the file.",
          "expected_results": "A CSV containing the visualization's data is downloaded.",
          "inputs": "Dataset: \"Sales_Data.csv\", Visualization: Bar chart grouped by Region",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 71.42857142857143,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 4,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 4,
            "ambiguity_in_technical_details": 3
          },
          "rust_overall": 4.25,
          "combined_score": 78.21428571428572,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Consuming User, I want to be able to change the display of all monetary measures across a set of currencies, So that I can understand localised amounts in non-localised figures.",
          "preconditions": "Dataset has USD measures and user can change display currency.",
          "steps": "1. Open the visualization.\n2. Change display currency from USD to EUR in settings.\n3. Observe the updated amounts.",
          "expected_results": "Monetary values are converted using the specified rate and displayed in EUR.",
          "inputs": "Dataset: \"Sales_Data.csv\", Measure: \"Sales (USD)\", Conversion Rate: 0.92",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 1,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 64.28571428571429,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 4,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 4,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.416666666666667,
          "combined_score": 76.30952380952382,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Consuming User, I want to see textual descriptions that accompany embedded visualisations, So that I can more easily understand what I am viewing.",
          "preconditions": "Visualization is embedded and descriptions are supported.",
          "steps": "1. Open the dashboard/report.\n2. Locate the \"Sales by Region\" visualization.\n3. Check for the accompanying description text.",
          "expected_results": "The provided description appears near the visualization and offers context.",
          "inputs": "Visualization: \"Sales by Region Bar Chart\", Description text provided",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 0,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 64.28571428571429,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 4,
            "acceptance_criteria_defined": 4,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 4
          },
          "rust_overall": 4.333333333333334,
          "combined_score": 75.47619047619048,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Consuming User, I want to be able to share a view state as a URL to social networks, so that I can share data that I have found with others.",
          "preconditions": "System supports shareable view URLs.",
          "steps": "1. Open visualization and apply filters Region=\"North\" and Year=2023.\n2. Click \"Share\".\n3. Copy the URL and open it in a browser to verify.",
          "expected_results": "The URL opens to the same filtered view.",
          "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters: Region=\"North\", Year=2023",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 71.42857142857143,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.583333333333334,
          "combined_score": 81.54761904761907,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Data Consuming User, I want to be able to download an image of a particular view state, So that I can use it offline.",
          "preconditions": "System supports image downloads for visualizations.",
          "steps": "1. Apply the filters.\n2. Click \"Download Image\".\n3. Save the file.",
          "expected_results": "Saved image matches the current filtered view.",
          "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters: Region=\"North\", Year=2023",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 2,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 4,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.666666666666666,
          "combined_score": 85.95238095238093,
          "verdict": "High Quality"
        },
        {
          "user_story": "As a Data Consuming User, I want to be able to share an image of a particular view state to the social networks that support this, so that I can provide richer context in those communication channels for data I am sharing.",
          "preconditions": "System supports sharing images to social networks and user is signed in to target network where required.",
          "steps": "1. Apply filters.\n2. Click \"Share Image\" and select a supported network.\n3. Add optional text and post.",
          "expected_results": "The image and optional text are posted to the selected social network.",
          "inputs": "Visualization: \"Sales by Region Bar Chart\", Filters: Region=\"North\", Year=2023",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 2,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 78.57142857142857,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 4,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 4
          },
          "rust_overall": 4.416666666666667,
          "combined_score": 83.45238095238096,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a Developer, I want to be able to customize the Brand Name, Icon, and Primary Color of all frontend JavaScript apps, so that I can customize the branding for my own needs.",
          "preconditions": "Frontend supports branding configuration and user can edit settings.",
          "steps": "1. Open the app settings or config file.\n2. Update Brand Name to \"MyApp\" and Primary Color to \"#4CAF50\".\n3. Save and refresh the app.",
          "expected_results": "App displays the new brand name and color in UI elements.",
          "inputs": "Brand Name: \"MyApp\", Primary Color: \"#4CAF50\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 71.42857142857143,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 3,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 3,
            "compliance_best_practices": 4,
            "translating_needs": 4,
            "ambiguity_in_technical_details": 4
          },
          "rust_overall": 4.166666666666666,
          "combined_score": 77.38095238095238,
          "verdict": "Adequate"
        },
        {
          "user_story": "As an API User, I want to be able to understand if a user is a Publisher, So that I can offer functionality based on Dataset Publisher privileges.",
          "preconditions": "API supports role queries and user exists.",
          "steps": "1. Request /api/users/12345/roles.\n2. Inspect response for role entries.",
          "expected_results": "Response includes \"Publisher\" role for user 12345.",
          "inputs": "User ID: \"12345\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 0,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 64.28571428571429,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 5,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 4,
            "compliance_best_practices": 5,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 4
          },
          "rust_overall": 4.583333333333333,
          "combined_score": 77.97619047619048,
          "verdict": "Adequate"
        },
        {
          "user_story": "As a User, I want to be able to set my own username, so that my data is more easily discoverable.",
          "preconditions": "Username is available and system allows changes.",
          "steps": "1. Open Profile Settings.\n2. Enter \"DataExplorer123\" in Username field.\n3. Save changes.",
          "expected_results": "Username is saved and reflected on profile.",
          "inputs": "Desired Username: \"DataExplorer123\"",
          "sci_scores": {
            "traceability": 2,
            "coverage_breadth": 1,
            "coverage_depth": 1,
            "clarity_precision": 2,
            "completeness": 2,
            "variety_types": 0,
            "consistency": 2
          },
          "sci_percent": 71.42857142857143,
          "rust_scores": {
            "readability_overall": 5,
            "grammar_clarity": 5,
            "accuracy_to_intent": 5,
            "clarity_comprehensibility": 5,
            "specific_information": 5,
            "acceptance_criteria_defined": 4,
            "coverage_of_case_types": 2,
            "coverage_technical_reqs": 2,
            "compliance_best_practices": 4,
            "translating_needs": 5,
            "ambiguity_in_technical_details": 5
          },
          "rust_overall": 4.333333333333333,
          "combined_score": 79.04761904761904,
          "verdict": "Adequate"
        }
      ]
    }
  ]
}


 degraded_severe 
 [
  {
    "user_story": "Edit published dataset.",
    "inputs": "Dataset Name: \"Sales_Report_2023\"",
    "preconditions": "",
    "steps": "1. Open datasets.\n2. Edit \"Sales_Report_2023\".\n3. Add some data.",
    "expected_results": "Operation completes."
  },
  {
    "user_story": "Edit data model fields.",
    "inputs": "SalesModel, Old_Field → New_Field",
    "preconditions": "",
    "steps": "1. Go to models.\n2. Change a field name.\n3. Save (if available).",
    "expected_results": ""
  },
  {
    "user_story": "Delete a dataset.",
    "inputs": "",
    "preconditions": "",
    "steps": "1. Find the dataset.\n2. Delete it.",
    "expected_results": "Dataset may or may not be removed."
  },
  {
    "user_story": "Hide public dataset.",
    "inputs": "Public_Sales_Report",
    "preconditions": "User role unclear.",
    "steps": "1. Open Datasets.\n2. Use Actions to hide or do something similar.",
    "expected_results": "It should not be visible to others."
  },
  {
    "user_story": "View all datasets as admin.",
    "inputs": null,
    "preconditions": "",
    "steps": "1. Log in (maybe as admin).\n2. Check datasets list.",
    "expected_results": ""
  },
  {
    "user_story": "Admin delete dataset.",
    "inputs": "Test_Sales_Report",
    "preconditions": "",
    "steps": "1. Locate dataset and remove it.\n2. Confirm if asked.",
    "expected_results": "Item gone or still there depending on system."
  },
  {
    "user_story": "Change data source URL.",
    "inputs": "New URL: \"http://example.com/new-data.csv\"",
    "preconditions": "",
    "steps": "1. Edit data source and paste new URL.\n2. Save if prompted.",
    "expected_results": "System uses new data sometimes."
  },
  {
    "user_story": "Add a constant in packager.",
    "inputs": "Region = Global",
    "preconditions": "",
    "steps": "1. Open packager.\n2. Add constant and save.",
    "expected_results": "Constant added (or not)."
  },
  {
    "user_story": "Import Excel.",
    "inputs": "File: Sales_Data.xlsx",
    "preconditions": "",
    "steps": "1. Upload the file.\n2. Import it.",
    "expected_results": "Works usually."
  },
  {
    "user_story": "Map visualization readiness.",
    "inputs": "Coords exist",
    "preconditions": "",
    "steps": "1. Try to create a map.\n2. See what happens.",
    "expected_results": ""
  },
  {
    "user_story": "Import JSON data.",
    "inputs": "Sales_Data.json",
    "preconditions": "",
    "steps": "1. Upload JSON.\n2. Map keys quickly.\n3. Click import.",
    "expected_results": "Data appears (maybe)."
  },
  {
    "user_story": "Import Google Sheet.",
    "inputs": "Google Sheet link",
    "preconditions": "",
    "steps": "1. Paste URL.\n2. Hit import.",
    "expected_results": "Import might fail if permissions are wrong."
  },
  {
    "user_story": "Import Fiscal Data Package.",
    "inputs": "Some descriptor file",
    "preconditions": "",
    "steps": "1. Upload descriptor.\n2. Let system do the rest.",
    "expected_results": ""
  },
  {
    "user_story": "Upload GeoJSON source.",
    "inputs": "regions.geojson",
    "preconditions": "",
    "steps": "1. Upload file.\n2. Give it a name.",
    "expected_results": "Sometimes visible in maps."
  },
  {
    "user_story": "Filter, sort, aggregate data.",
    "inputs": "Sales_Data.csv",
    "preconditions": "",
    "steps": "1. Apply some filters and sorting.\n2. Look at results.",
    "expected_results": "Result set returned (maybe incomplete)."
  },
  {
    "user_story": "Download CSV from visualization.",
    "inputs": "Visualization view",
    "preconditions": "",
    "steps": "1. Click download.\n2. Save.",
    "expected_results": "File is downloaded or not."
  },
  {
    "user_story": "Change currency display.",
    "inputs": "Conversion rate unspecified",
    "preconditions": "",
    "steps": "1. Change currency setting.\n2. Check values.",
    "expected_results": "Numbers may update inconsistently."
  },
  {
    "user_story": "Show descriptions for visuals.",
    "inputs": "Some description text",
    "preconditions": "",
    "steps": "1. Look near the chart for text.\n2. If absent, assume none provided.",
    "expected_results": ""
  },
  {
    "user_story": "Share view as URL.",
    "inputs": "Filtered view",
    "preconditions": "",
    "steps": "1. Click share.\n2. Copy link.\n3. Paste somewhere.",
    "expected_results": "Link may not preserve view."
  },
  {
    "user_story": "Download view image.",
    "inputs": "Visualization",
    "preconditions": "",
    "steps": "1. Click download image.\n2. Save it.",
    "expected_results": "Image downloaded but may not match filters."
  },
  {
    "user_story": "Share view image to social networks.",
    "inputs": "Visualization and optional text",
    "preconditions": "",
    "steps": "1. Click share image.\n2. Choose a network and post.",
    "expected_results": "Post may or may not include expected text."
  },
  {
    "user_story": "Customize frontend branding.",
    "inputs": "Brand: MyApp, Color: unknown",
    "preconditions": "",
    "steps": "1. Change branding in config.\n2. Reload app.",
    "expected_results": "Brand may or may not update everywhere."
  },
  {
    "user_story": "Detect if user is Publisher via API.",
    "inputs": "User ID: \"12345\"",
    "preconditions": "",
    "steps": "1. Call API endpoint for user roles.\n2. See if role contains publisher.",
    "expected_results": "API might return role or an error."
  },
  {
    "user_story": "Set username.",
    "inputs": "",
    "preconditions": "",
    "steps": "1. Go to settings.\n2. Change username.\n3. Save.",
    "expected_results": "Username change might fail if name taken."
  }
]

result

